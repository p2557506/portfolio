[{"/Users/admin/Documents/Projects/portfolio-app/src/index.js":"1","/Users/admin/Documents/Projects/portfolio-app/src/App.js":"2","/Users/admin/Documents/Projects/portfolio-app/src/home/Home.jsx":"3","/Users/admin/Documents/Projects/portfolio-app/src/components/work/Work.jsx":"4","/Users/admin/Documents/Projects/portfolio-app/src/components/navbar/Navbar.jsx":"5","/Users/admin/Documents/Projects/portfolio-app/src/components/portfolio/Portfolio.jsx":"6","/Users/admin/Documents/Projects/portfolio-app/src/components/intro/Intro.jsx":"7","/Users/admin/Documents/Projects/portfolio-app/src/components/contact/Contact.jsx":"8","/Users/admin/Documents/Projects/portfolio-app/src/components/menu/Menu.jsx":"9","/Users/admin/Documents/Projects/portfolio-app/src/components/about/About.jsx":"10","/Users/admin/Documents/Projects/portfolio-app/src/data.js":"11","/Users/admin/Documents/Projects/portfolio-app/src/components/portfolioList/PortfolioList.jsx":"12"},{"size":252,"mtime":1731768117523,"results":"13","hashOfConfig":"14"},{"size":520,"mtime":1731768117338,"results":"15","hashOfConfig":"14"},{"size":988,"mtime":1731768117522,"results":"16","hashOfConfig":"14"},{"size":9736,"mtime":1731768117521,"results":"17","hashOfConfig":"14"},{"size":1890,"mtime":1731768117518,"results":"18","hashOfConfig":"14"},{"size":2537,"mtime":1731768117519,"results":"19","hashOfConfig":"14"},{"size":1117,"mtime":1731768117517,"results":"20","hashOfConfig":"14"},{"size":1237,"mtime":1731768117516,"results":"21","hashOfConfig":"14"},{"size":723,"mtime":1731768117518,"results":"22","hashOfConfig":"14"},{"size":137,"mtime":1731768117514,"results":"23","hashOfConfig":"14"},{"size":5872,"mtime":1731768117522,"results":"24","hashOfConfig":"14"},{"size":293,"mtime":1731768117520,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tr361w",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/admin/Documents/Projects/portfolio-app/src/index.js",[],[],"/Users/admin/Documents/Projects/portfolio-app/src/App.js",["70","71"],[],"import Work from \"./components/work/Work\";\nimport Home from \"./home/Home\";\n\n\nimport { BrowserRouter, Routes,Route } from \"react-router-dom\";\n\n\n\nfunction App() {\n  //Menu not open by default\n  \n  //Passed as props\n  {/**Structure\nTop\nSection : Intro, Portfolio, Work... testimonials */}\n  return (\n    <div className=\"app\">\n      \n      <BrowserRouter basename=\"/portfolio\">\n      <Routes>\n        <Route path=\"/\" element={<Home/>}/>\n        \n      </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/admin/Documents/Projects/portfolio-app/src/home/Home.jsx",["72"],[],"import React from 'react'\nimport Navbar from '../components/navbar/Navbar'\nimport Portfolio from \"../components/portfolio/Portfolio\";\n\n\nimport Intro from \"../components/intro/Intro\";\nimport Contact from \"../components/contact/Contact\";\nimport { useState } from \"react\";\nimport Menu from \"../components/menu/Menu\";\nimport \"./home.scss\"\nimport About from '../components/about/About';\n\n\n\n\nconst Home = () => {\n  const [menuOpen,setMenuOpen] = useState(false);\n  return (\n    <div className=\"home\">\n        <div className=\"navbar\">\n        <Navbar menuOpen={menuOpen} setMenuOpen={setMenuOpen}/>\n        <Menu menuOpen={menuOpen} setMenuOpen={setMenuOpen}/>\n      </div>\n      <div className=\"sections\">\n      <div className=\"introSection\">\n          <Intro/>\n        </div>\n        \n        <div className=\"portfolioSection\">\n          <Portfolio/>\n        </div>\n        <div className=\"contactSection\">\n          <Contact/>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home","/Users/admin/Documents/Projects/portfolio-app/src/components/work/Work.jsx",["73","74","75","76","77"],[],"import React from 'react'\nimport Navbar from '../navbar/Navbar'\nimport Menu from '../menu/Menu'\nimport { useState,useEffect } from 'react'\n\n//Naruto Project Images\nimport narutoImg1 from \"../../assets/nwebsitess.png\"\n\n//Pong project Images\nimport pongImg1 from \"../../assets/pongGame.png\"\n//Atonement Project Images\nimport atonementImg1 from \"../../assets/atonementTitleScreen.png\"\n//Wordle Project Images\nimport wordleImg1 from \"../../assets/wordleclone.png\"\n\nimport charp from \"../../assets/c-sharp.png\"\n\nimport \"./work.scss\"\nimport { Link, useLocation } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faReact, faGit,faSass,faHtml5,faNode,faUnity} from '@fortawesome/free-brands-svg-icons'\n\n\nconst Work = () => {\n\n    const location = useLocation();\n    //Parse int so thatswitch case works\n    const workId = parseInt(location.pathname.split(\"/\")[2]);\n    \n\n    const [chosenProject,setChosenProject] = useState([])\n\n    const [menuOpen,setMenuOpen] = useState(false);\n    \n    const list = [\n      {\n        id: 1,\n          title : \"Naruto World\",\n          appType: \"Web App\",\n          techStack1: <FontAwesomeIcon icon={faReact} />,\n          techStack2: <FontAwesomeIcon icon={faHtml5} />,\n          techStack3: <FontAwesomeIcon icon={faSass} />,\n          details: <p>Website to help users learn about Naruto lore and provide them with a watching guide to follow the narrative without filler</p> ,\n          purposeAndGoals: <div className=\"container\"><p>I developed this website out of a passion for the Naruto universe.</p> <p>My intention with this website is to help both old and new watchers learn about the characters in the show and provide a watching guide without any of the filler</p></div> ,\n          problemsFaced: <p>Naruto DB API doesn't feature all charcaters, clans villages I wanted to include in this app to make it as comprehensive as possible.</p>,\n          lessonsLearned: <p>My skills with css animations improved greatly. I learnt how to better handle accessing APIs and work with Postman to test them</p>,\n          img1:narutoImg1,\n          img2:\"\",\n          img3:\"\",\n\n        },\n        {\n          id: 2,\n          title : \"PONG\",\n          appType: \"2-Player Arcade Game\",\n          techStack1: <FontAwesomeIcon icon={faUnity} />,\n          techStack2: <img src={charp} width=\"50px\" ></img>,\n          \n          details: \"2D sports game simulating table tennis. Can play against computer AI or another local player. Player that reaches 7 goals first wins\",\n          purposeAndGoals: \"Game was developed to build knowledge on working with multiplayer games and provide a fun replayable experience to the player. To expand on the game, different modes, backgorunds and difficulty modes will be added to imporve replayability. Online multiplayer will also be implemented\",\n          problemsFaced:\"N/A\",\n          lessonsLearned:\"N/A\",\n          img1: pongImg1,\n          img2:\"\",\n          img3:\"\",\n          \n        },\n        {\n          id: 3,\n          title : \"Atonement\",\n          appType: \"Platformer Game\",\n          techStack1: <FontAwesomeIcon icon={faUnity} />,\n          techStack2: <img src={charp} width=\"50px\" ></img>,\n          \n          details:  \"2D Platformer game containing 3 distinct levels and and a final boss stage.\",\n          purposeAndGoals: <div className=\"container\"><p>This game was designed to be a compact and enjoyable experience for the player.</p> <p>Different enemy types were included to give the player unique challenges with an intention to keep them engaged.</p><p> Different movement mechanics were also implemented to allow the player to be creative in the way they tackled obstacles.</p><p>After beating the 3 levels the player would face a final boss enemy which would be much tougher than previous enemies encountered. 'Deathbringer' has a larger pool of health, ranged and close combat attacks and a 2nd phase offering a different challenge to the player</p></div> ,\n          problemsFaced: <div className=\"container\"><p>Thinking about how and why games were designed in the way they were presented a learning curve.</p> <p>Through extensive research by studying game design case studies, listening to game developer and interviews and taking inspiration from famous titles such as 'Hollow Knight' and 'Super Mario World' I was able to get a better grasp on level design, rewards, goals and immersion</p></div>,\n          lessonsLearned: <div className=\"container\"><p>Creating 'Atonement' was my first real experience with using the Unity game engine.</p> <p>I learnt a great deal about colliders, vectors, scripting , animations, ai behaviours and grew much more familiar with C#</p><p>My knowledge of fundamental game design principles grew and my passion for game development was now born</p></div>,\n          img1:atonementImg1,\n          img2:\"\",\n          img3:\"\",\n        },\n        {\n          id: 4,\n          title : \"Wordle Clone\",\n          appType: \"Web/Game App\",\n          techStack1: <FontAwesomeIcon icon={faReact} />,\n          techStack2: <FontAwesomeIcon icon={faHtml5} />,\n          \n          details: <p>Website to help users learn about Naruto lore and provide them with a watching guide to follow the narrative without filler</p>,\n          purposeAndGoals: <div className=\"container\"><p>Built this app clone to better understand the resaoning behind its design and coding decisions.</p> <p>To expand on the current worlde game by by adding additional themed game modes to add variety and alter difficulty.</p></div>,\n          problemsFaced: <div className=\"container\"><p>Handling the conditional logic of colouring in letters based on their existence and position in the word.</p><p></p></div>,\n          lessonsLearned: <div className=\"container\"><p>Gained more experience with useContext hook to make accessing components throughout the application much more effecient and maintainable.</p></div>,\n          img1:wordleImg1,\n          img2:\"\",\n          img3:\"\",\n        },\n        {\n          id:5\n        }\n        \n      ];\n      \n      useEffect(()=>{\n        switch (workId) {\n          case 1:\n            setChosenProject(list[0]);\n            \n            break;\n            case 2:\n              setChosenProject(list[1]);\n            break;\n            case 3:\n              setChosenProject(list[2]);\n            break;\n            case 4:\n              setChosenProject(list[3]);\n            break;\n            \n          default:\n            setChosenProject(list[0]);\n            break;\n        }\n      },[workId]) //Dependency is selected, when changed useEffect will run\n    \n\n      console.log(list[1])\n      console.log(list)\n  return (\n    <div className=\"work\" key={workId}>\n        <Navbar menuOpen={menuOpen} setMenuOpen={setMenuOpen}/>\n        <Menu menuOpen={menuOpen} setMenuOpen={setMenuOpen}/>\n        <div className=\"specificSection\" >\n        \n          <div className=\"left\">\n\n                    <h1>Project</h1>\n                <div className=\"header\">\n                  <div className=\"appIntro\">\n                    <h2 className=\"appName\">{chosenProject.title}</h2>\n                    <h3>App type</h3>\n                  </div>\n                                  \n                  <div className=\"techContainer\">\n                    <h2>Tech Stack</h2>\n                    <div className=\"techStack\">\n                      \n                      {chosenProject.techStack1}\n                      {chosenProject.techStack2}\n                      {chosenProject.techStack3}\n                      \n                      \n\n                    </div>\n                      \n                  </div>\n                </div>\n                <div className=\"technicalDetails\">\n                  <h2>Details</h2>\n                  <p>{chosenProject.details}</p>\n                </div>\n                <div className=\"retrospectiveContainer\">\n\n                  <div className=\"purposeContainer\">\n                    <h2>Purpose & Goals</h2>\n                    {chosenProject.purposeAndGoals} \n                  </div>\n                  <div className=\"purposeContainer\">\n                    <h2>Problems Faced</h2>\n                    {chosenProject.problemsFaced} \n                  </div>\n                  <div className=\"purposeContainer\">\n                    <h2>Lessons Learned</h2>\n                    {chosenProject.lessonsLearned}\n                  </div>\n                \n                </div>\n                <div className=\"appInteract\">\n                    <button>Visit Website</button>\n                </div>\n                <div className=\"examples\">\n                  <h2>Examples</h2>\n                    <div className=\"exampleImage\">\n                      <img src={chosenProject.img1} alt=\"\" />\n                    </div>\n                    <div className=\"exampleImage\">\n                      <img src={chosenProject.img2} alt=\"\" />\n                    </div>\n                    <div className=\"exampleImage\">\n                      <img src={chosenProject.img3} alt=\"\" />\n                    </div>\n                </div>\n          </div>\n          <div className=\"right\">\n          \n            <h2>Projects</h2>\n            <div className=\"projects\">\n\n            {list.map(item =>(\n                <Link to={`/work/${item.id}`}>\n              <div className=\"projectItem\">\n                <img src={item.img1} alt=\"\" />\n                <div>\n\n                  <h2>{item.title}</h2>\n                  <p>{item.appType}</p>\n                </div>\n              </div>\n              </Link>\n            ))}\n            </div>\n              \n          </div>\n        </div> \n\n    </div>\n  )\n}\n\nexport default Work","/Users/admin/Documents/Projects/portfolio-app/src/components/navbar/Navbar.jsx",["78","79","80","81","82"],[],"import React, { useState } from 'react'\nimport  \"./navbar.scss\"\nimport { Link } from 'react-router-dom'\nimport EmailIcon from '@mui/icons-material/Email';\nimport SmartphoneIcon from '@mui/icons-material/Smartphone';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\n\nconst Navbar = ({menuOpen,setMenuOpen}) => {\n\n\n  \n  return (\n    <div className={\"navbar \" + (menuOpen && \"active\")}>\n      <div className=\"wrapper\">\n\n        <div className=\"left\">\n          <div className=\"logo\">\n            Isaac Zerououl\n          </div>\n          <div className=\"itemContainer\">\n            \n            <div className=\"contactContainer\">\n\n              <EmailIcon className=\"icon\"/>\n              <span>zerououli@gmail.com</span>\n            </div>\n            <div className=\"contactContainer\">\n\n              <SmartphoneIcon className=\"icon\"/>\n              <span>+44 79 2330 2593</span>\n            </div>\n            <div className=\"contactContainer\">\n              <a href=\"https://github.com/p2557506\" target=\"_blank\"><GitHubIcon className=\"icon\"/></a>\n              \n              \n            </div>\n            <div className=\"contactContainer\">\n              <a href=\"https://www.linkedin.com/in/isaaczerououl/\" target=\"_blank\"><LinkedInIcon className=\"icon\"/></a>\n              \n              \n            </div>\n\n          </div>\n        </div>\n        <div className=\"right\">\n          {/**When hamburger is clicked set menu open to the state opposite o what it is */}\n          <div className=\"hamburger\" onClick={() => setMenuOpen(!menuOpen)}>\n            <span className=\"line1\"></span>\n            <span className=\"line2\"></span>\n            <span className=\"line3\"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Navbar","/Users/admin/Documents/Projects/portfolio-app/src/components/portfolio/Portfolio.jsx",["83","84","85","86","87"],[],"import React, { useState,useEffect } from 'react'\nimport \"./portfolio.scss\"\nimport { Link } from 'react-router-dom';\nimport PortfolioList from '../portfolioList/PortfolioList';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport PublicIcon from '@mui/icons-material/Public';\n\nimport {featuredPortfolio, gamePortfolio, webPortfolio, mobilePortfolio} from \"../../data.js\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReact } from '@fortawesome/free-brands-svg-icons';\n\nconst Portfolio = () => {\n\n  const [selected,setSelected] = useState(\"featured\");\n  const [data,setData] = useState([]);\n\n  const list = [\n    {\n      id: \"featured\",\n      title : \"Featured\",\n    },\n    {\n      id: \"web\",\n      title: \"Web App\",\n    },\n    {\n      id: \"game\",\n      title: \"Game App\"\n    },\n    \n\n  ];\n\n  useEffect(()=>{\n    switch (selected) {\n      case \"featured\":\n        setData(featuredPortfolio);\n        break;\n        case \"web\":\n          setData(webPortfolio);\n          break;\n          case \"game\":\n        setData(gamePortfolio);\n        break;\n        \n      default:\n        setData(featuredPortfolio)\n        break;\n    }\n  },[selected]) //Dependency is selected, when changed useEffect will run\n  \n\n  return (\n    <div className=\"portfolio\" id=\"portfolio\">\n      <h1>Portfolio</h1>\n      <ul>\n        {list.map(item =>(\n          //active set to true if item is selected\n          <PortfolioList title ={item.title} active ={selected === item.id} setSelected ={setSelected} id={item.id}/>\n        ))}\n      </ul>\n      <div className=\"portfolioItemContainer\">\n          {data.map(d =>(\n        <div className=\"projectContainer\">\n\n            \n          <div className=\"itemImage\">\n            <img src={d.img} alt=\"\" />\n            \n          </div>\n          <div className=\"itemInfo\">\n            <h3 className=\"itemTitle\">{d.title}</h3>\n            <div className=\"itemTechStack\">\n              <div className=\"heading\"><p>Tech Stack:</p></div>\n              <div className=\"tech\"><p>{d.techStack1}</p><p>{d.techStack2}</p><p>{d.techStack3}</p></div>\n              \n            </div>\n            <p className=\"itemDescription\">{d.desc}</p>\n            <div className=\"buttons\">\n              <button className=\"codeBtn\"><GitHubIcon /><a href={d.codeLink} target=\"_blank\">Code</a></button>\n              <button className=\"liveBtn\"><PublicIcon/>Live</button>\n            </div>\n\n          </div>\n        </div>\n            ))}\n        \n      </div>\n    </div>\n  )\n}\n\nexport default Portfolio","/Users/admin/Documents/Projects/portfolio-app/src/components/intro/Intro.jsx",[],[],"/Users/admin/Documents/Projects/portfolio-app/src/components/contact/Contact.jsx",["88","89","90"],[],"import React, { useState,useRef } from 'react'\nimport emailjs from '@emailjs/browser';\nimport \"./contact.scss\";\nimport shake from \"../../assets/shake.svg\"\nimport { Spa } from '@mui/icons-material';\nconst Contact = () => {\n\n  const [message,setMessage] = useState(false)\n\n  const form = useRef();\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs\n      .sendForm('service_rodecq2', 'template_d5e11wf', form.current,\n        'qR7eSQagJehOReGdM',\n      )\n      .then(\n        () => {\n          console.log('SUCCESS!');\n        },\n        (error) => {\n          console.log('FAILED...', error.text);\n        },\n      );\n  };\n  return (\n    <div className=\"contact\" id=\"contact\">\n      <div className=\"left\">\n        \n        <img src={shake} alt=\"\" />\n      </div>\n      <div className=\"right\">\n        <h2>Contact</h2>\n        <form ref={form} onSubmit={sendEmail}>\n          <label>Name</label>\n          <input type=\"text\" name=\"user_name\" />\n          <label>Email</label>\n          <input type=\"email\" name=\"user_email\" />\n          <label>Message</label>\n          <textarea name=\"message\" />\n          <input type=\"submit\" value=\"Send\" />\n          \n      </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Contact","/Users/admin/Documents/Projects/portfolio-app/src/components/menu/Menu.jsx",["91","92","93"],[],"import React from 'react'\nimport \"./menu.scss\"\nimport { HashLink,NavHashLink } from 'react-router-hash-link'\nimport { Link } from 'react-router-dom'\nconst Menu = ({menuOpen,setMenuOpen}) => {\n\n    const handleClick = () =>{\n        setMenuOpen(false);\n    }\n  return (\n    <div className={\"menu \" + (menuOpen && \"active\")}>\n        <ul>\n            <li onClick={handleClick}>\n            <a\n  href=\"#intro\"\n  \n  // etc...\n>Intro</a>\n            </li>\n            <li onClick={handleClick}>\n            <a href=\"#portfolio\">Portfolio</a>\n            </li>\n            <li onClick={handleClick}>\n                <a href=\"#contact\">Contact</a>\n            </li>\n            \n        </ul>\n    </div>\n  )\n}\n\nexport default Menu","/Users/admin/Documents/Projects/portfolio-app/src/components/about/About.jsx",[],[],"/Users/admin/Documents/Projects/portfolio-app/src/data.js",["94"],[],"//Intro Showcase Images\nimport narutoShowcase from \"./assets/nwebsitess.png\";\nimport pongShowcase from \"./assets/pongGame.png\";\nimport worldeShowcase from \"./assets/wordleclone.png\";\nimport atonementShowcase from \"./assets/atonementTitleScreen.png\";\nimport bookLoggerShowcase from \"./assets/booklogger.png\";\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faDatabase} from '@fortawesome/free-solid-svg-icons'\nimport {faReact, faGit,faSass,faHtml5,faNode,faUnity,faCss3Alt} from '@fortawesome/free-brands-svg-icons'\n\n\nexport const featuredPortfolio = [\n    {\n        id: 1,\n        title: \"Booklogger Website\",\n        techStack1: <FontAwesomeIcon icon={faDatabase}/>,\n        techStack2: <FontAwesomeIcon icon={faReact} />,\n        techStack3: <FontAwesomeIcon icon={faNode} />,\n        img: bookLoggerShowcase,\n        codeLink:\"https://github.com/p2557506/book-logger\",\n        desc:\"Full-Stack Application (SERN) that allows the user to track the books they're reading, have read and want to read. Functioning register and login processes that incorporate both authorization and authentication\",\n    },\n    {\n        id: 2,\n        title: \"Naruto World Website\",\n        techStack1: <FontAwesomeIcon icon={faReact} />,\n        techStack2: <FontAwesomeIcon icon={faHtml5} />,\n        techStack3: <FontAwesomeIcon icon={faSass} />,\n        img: narutoShowcase,\n        codeLink:\"https://github.com/p2557506/naruto-app\",\n        desc:\"Website that lets user explore character abilities, backstories, clans, villages, tailed beasts and established teams that make up the amazing Naruto universe!\"\n    },\n    {\n        id: 3,\n        title: \"PONG Arcade Game\",\n        techStack1: <FontAwesomeIcon icon={faUnity} />,\n        techStack2: \"\",\n        techStack3: \"\",\n        img: pongShowcase,\n        codeLink: \"\",\n        desc:\"2D sports game simulating table tennis. Have fun playing against computer ai or another player. First to 7 wins! \"\n    },\n    {\n        id: 4,\n        title: \"Atonement\",\n        techStack1: <FontAwesomeIcon icon={faUnity} />,\n        techStack2: \"\",\n        techStack3: \"\",\n        img:  atonementShowcase,\n        codeLink:\"https://github.com/p2557506/2D-Platformer-Game-Ghost-Vania\",\n        desc:\"2D Platformer game with 3 distinct base levels and a final boss stage for the player to beat! Contains unique enemy types, platforming oppurtunities and collectibles\"\n    },\n    {\n        id: 5,\n        title: \"Wordle Clone\",\n        techStack1: <FontAwesomeIcon icon={faReact} />,\n        techStack2: <FontAwesomeIcon icon={faHtml5} />,\n        techStack3: <FontAwesomeIcon icon={faCss3Alt} />,\n        img: worldeShowcase,\n        codeLink:\"https://github.com/p2557506/wordle-clone\",\n        desc:\"App clone that mimics the functionality of the famous Wordle Game. Figure out the secret five letter word within 6 guesses\"\n    },\n    \n]\nexport const webPortfolio = [\n    {\n        id: 1,\n        title: \"Booklogger Website\",\n        techStack1: <FontAwesomeIcon icon={faDatabase}/>,\n        techStack2: <FontAwesomeIcon icon={faReact} />,\n        techStack3: <FontAwesomeIcon icon={faNode} />,\n        img: bookLoggerShowcase,\n        codeLink:\"https://github.com/p2557506/2D-Platformer-Game-Ghost-Vania\",\n        desc:\"Full-Stack Application (SERN) that allows the user to track the books they're reading, have read and want to read. Functioning register and login processes that incorporate both authorization and authentication\"\n    },\n    {\n        id: 2,\n        title: \"Naruto World Website\",\n        techStack1: <FontAwesomeIcon icon={faReact} />,\n        techStack2: <FontAwesomeIcon icon={faHtml5} />,\n        techStack3: <FontAwesomeIcon icon={faSass} />,\n        img: narutoShowcase,\n        codeLink:\"https://github.com/p2557506/naruto-app\",\n        desc:\"Website that lets user explore character abilities, backstories, clans, villages, tailed beasts and established teams that make up the amazing Naruto universe!\"\n    },\n    {\n        id: 3,\n        title: \"Wordle Clone\",\n        techStack1: <FontAwesomeIcon icon={faReact} />,\n        techStack2: <FontAwesomeIcon icon={faHtml5} />,\n        techStack3: <FontAwesomeIcon icon={faCss3Alt} />,\n        img: worldeShowcase,\n        codeLink:\"https://github.com/p2557506/wordle-clone\",\n        desc:\"App clone that mimics the functionality of the famous Wordle Game. Figure out the secret five letter word within 6 guesses\"\n    },\n    \n    \n]\nexport const gamePortfolio = [\n    {\n        id: 1,\n        title: \"PONG Arcade Game\",\n        techStack1: <FontAwesomeIcon icon={faUnity} />,\n        techStack2: \"\",\n        techStack3: \"\",\n        img: pongShowcase,\n        codeLink:\"\",\n        desc:\"2D sports game simulating table tennis. Have fun playing against computer ai or another player. First to 7 wins! \"\n    },\n    {\n        id: 2,\n        title: \"Atonement\",\n        techStack1: <FontAwesomeIcon icon={faReact} />,\n        techStack2: <FontAwesomeIcon icon={faHtml5} />,\n        techStack3: <FontAwesomeIcon icon={faSass} />,\n        img: atonementShowcase,\n        codeLink:\"https://github.com/p2557506/2D-Platformer-Game-Ghost-Vania\",\n        desc:\"2D Platformer game with 3 distinct base levels and a final boss stage for the player to beat! Contains unique enemy types, platforming oppurtunities and collectibles\"\n    },\n    {\n        id: 5,\n        title: \"Wordle Clone\",\n        techStack1: <FontAwesomeIcon icon={faReact} />,\n        techStack2: <FontAwesomeIcon icon={faHtml5} />,\n        techStack3: <FontAwesomeIcon icon={faCss3Alt} />,\n        img: worldeShowcase,\n        codeLink:\"https://github.com/p2557506/wordle-clone\",\n        desc:\"App clone that mimics the functionality of the famous Wordle Game. Figure out the secret five letter word within 6 guesses\"\n    },\n    \n]\nexport const mobilePortfolio = [\n    \n    \n    \n]\n\n\n      ","/Users/admin/Documents/Projects/portfolio-app/src/components/portfolioList/PortfolioList.jsx",[],[],{"ruleId":"95","severity":1,"message":"96","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":12},{"ruleId":"99","severity":1,"message":"100","line":13,"column":3,"nodeType":"101","messageId":"102","endLine":15,"endColumn":53},{"ruleId":"95","severity":1,"message":"103","line":11,"column":8,"nodeType":"97","messageId":"98","endLine":11,"endColumn":13},{"ruleId":"95","severity":1,"message":"104","line":21,"column":18,"nodeType":"97","messageId":"98","endLine":21,"endColumn":23},{"ruleId":"95","severity":1,"message":"105","line":21,"column":39,"nodeType":"97","messageId":"98","endLine":21,"endColumn":45},{"ruleId":"106","severity":1,"message":"107","line":57,"column":23,"nodeType":"108","endLine":57,"endColumn":54},{"ruleId":"106","severity":1,"message":"107","line":73,"column":23,"nodeType":"108","endLine":73,"endColumn":54},{"ruleId":"109","severity":1,"message":"110","line":124,"column":9,"nodeType":"111","endLine":124,"endColumn":17,"suggestions":"112"},{"ruleId":"95","severity":1,"message":"113","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"114","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":14},{"ruleId":"95","severity":1,"message":"115","line":8,"column":8,"nodeType":"97","messageId":"98","endLine":8,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":35,"column":15,"nodeType":"108","messageId":"118","endLine":35,"endColumn":69,"fix":"119"},{"ruleId":"116","severity":1,"message":"117","line":40,"column":15,"nodeType":"108","messageId":"118","endLine":40,"endColumn":84,"fix":"120"},{"ruleId":"95","severity":1,"message":"114","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":14},{"ruleId":"95","severity":1,"message":"121","line":8,"column":57,"nodeType":"97","messageId":"98","endLine":8,"endColumn":72},{"ruleId":"95","severity":1,"message":"122","line":9,"column":10,"nodeType":"97","messageId":"98","endLine":9,"endColumn":25},{"ruleId":"95","severity":1,"message":"123","line":10,"column":10,"nodeType":"97","messageId":"98","endLine":10,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":80,"column":57,"nodeType":"108","messageId":"118","endLine":80,"endColumn":94,"fix":"124"},{"ruleId":"95","severity":1,"message":"125","line":5,"column":10,"nodeType":"97","messageId":"98","endLine":5,"endColumn":13},{"ruleId":"95","severity":1,"message":"126","line":8,"column":10,"nodeType":"97","messageId":"98","endLine":8,"endColumn":17},{"ruleId":"95","severity":1,"message":"127","line":8,"column":18,"nodeType":"97","messageId":"98","endLine":8,"endColumn":28},{"ruleId":"95","severity":1,"message":"128","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":18},{"ruleId":"95","severity":1,"message":"129","line":3,"column":19,"nodeType":"97","messageId":"98","endLine":3,"endColumn":30},{"ruleId":"95","severity":1,"message":"114","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":14},{"ruleId":"95","severity":1,"message":"104","line":11,"column":18,"nodeType":"97","messageId":"98","endLine":11,"endColumn":23},"no-unused-vars","'Work' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'About' is defined but never used.","'faGit' is defined but never used.","'faNode' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'list'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'useState' is defined but never used.","'Link' is defined but never used.","'PictureAsPdfIcon' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"131","text":"132"},{"range":"133","text":"132"},"'mobilePortfolio' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faReact' is defined but never used.",{"range":"134","text":"132"},"'Spa' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'HashLink' is defined but never used.","'NavHashLink' is defined but never used.",{"desc":"135","fix":"136"},[1138,1138]," rel=\"noreferrer\"",[1352,1352],[2317,2317],"Update the dependencies array to be: [list, workId]",{"range":"137","text":"138"},[6591,6599],"[list, workId]"]